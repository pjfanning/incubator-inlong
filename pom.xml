<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>23</version>
    </parent>

    <groupId>org.apache.inlong</groupId>
    <artifactId>inlong</artifactId>
    <version>1.1.0-incubating-SNAPSHOT</version>
    <name>Apache InLong</name>

    <description>InLong is a one-stop integration framework for massive data donated by Tencent to the Apache
        community.
        It provides automatic, safe, reliable, and high-performance data transmission capabilities
        to
        facilitate the construction of streaming-based data analysis, modeling, and applications.
    </description>
    <url>https://github.com/apache/incubator-inlong</url>

    <organization>
        <name>Apache Software Foundation</name>
        <url>https://www.apache.org/</url>
    </organization>
    <inceptionYear>2013</inceptionYear>

    <developers>
        <developer>
            <organization>Apache InLong(incubating) developers</organization>
            <organizationUrl>https://inlong.apache.org/</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/apache/incubator-inlong</url>
        <connection>scm:git:https://github.com/apache/incubator-inlong.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:apache/incubator-inlong.git
        </developerConnection>
    </scm>

    <ciManagement>
        <system>GitHub Actions</system>
        <url>https://github.com/apache/incubator-inlong/actions</url>
    </ciManagement>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/apache/incubator-inlong/issues</url>
    </issueManagement>

    <mailingLists>
        <mailingList>
            <name>InLong Developer List</name>
            <post>dev@inlong.apache.org</post>
            <subscribe>dev-subscribe@inlong.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@inlong.apache.org</unsubscribe>
        </mailingList>
    </mailingLists>

    <modules>
        <module>inlong-common</module>
        <module>inlong-sdk</module>
        <module>inlong-tubemq</module>
        <module>inlong-audit</module>
        <module>inlong-dataproxy</module>
        <module>inlong-agent</module>
        <module>inlong-manager</module>
        <module>inlong-sort</module>
        <module>inlong-sort-standalone</module>
        <module>inlong-dashboard</module>
        <module>inlong-distribution</module>
    </modules>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.encoding>UTF-8</project.build.encoding>
        <plugin.compile.version>3.8.1</plugin.compile.version>
        <plugin.assembly.version>3.2.0</plugin.assembly.version>
        <checkstyle.version>6.19</checkstyle.version>
        <dockerfile-maven.version>1.4.13</dockerfile-maven.version>
        <docker.organization>inlong</docker.organization>

        <flume.version>1.9.0</flume.version>
        <netty.version>4.1.72.Final</netty.version>

        <simpleclient_httpserver.version>0.14.1</simpleclient_httpserver.version>
        <httpcore.version>4.4.14</httpcore.version>
        <httpclient.version>4.5.13</httpclient.version>

        <spring.boot.version>2.6.6</spring.boot.version>
        <spring.version>5.3.18</spring.version>
        <spring.autoconfigure.version>2.4.3</spring.autoconfigure.version>
        <spring.plugin.version>2.6.6</spring.plugin.version>

        <mybatis.starter.version>2.1.3</mybatis.starter.version>
        <druid.version>1.2.6</druid.version>
        <elasticsearch.version>6.8.23</elasticsearch.version>

        <snappy.version>1.1.8.4</snappy.version>
        <protobuf.version>3.19.4</protobuf.version>
        <common.lang3.vserion>3.11</common.lang3.vserion>

        <gson.version>2.8.6</gson.version>
        <jackson.version>2.13.2.1</jackson.version>
        <guava.version>19.0</guava.version>
        <lombok.version>1.18.22</lombok.version>
        <jetty.servlet.version>2.5-20110124</jetty.servlet.version>
        <codec.version>1.15</codec.version>

        <pulsar.version>2.8.1</pulsar.version>
        <kafka.version>2.4.1</kafka.version>

        <logback.version>1.2.10</logback.version>
        <junit.version>4.13.2</junit.version>
        <hadoop.version>2.10.1</hadoop.version>
        <postgres.version>42.3.3</postgres.version>

        <testng.version>6.14.3</testng.version>
        <powermock.version>2.0.9</powermock.version>
        <mockito.version>3.12.4</mockito.version>
        <log4j2.version>2.17.1</log4j2.version>
        <slf4j.version>1.7.36</slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--flume dependency -->
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-core</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-node</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-sdk</artifactId>
                <version>${flume.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-configuration</artifactId>
                <version>${flume.version}</version>
            </dependency>


            <!--db-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--spring -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!--netty dependency-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${codec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${jetty.servlet.version}</version>
            </dependency>

            <!-- http -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <!--elasticsearch-->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <!--pulsar dependency-->
            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-client</artifactId>
                <version>${pulsar.version}</version>
            </dependency>

            <!--kafka dependency-->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- google -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- snappy -->
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- lang -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${common.lang3.vserion}</version>
            </dependency>

            <!-- metric -->
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_httpserver</artifactId>
                <version>${simpleclient_httpserver.version}</version>
            </dependency>

            <!-- log 4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- logback -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-testng</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.encoding}</encoding>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
                <version>${plugin.compile.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.29</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>codestyle/checkstyle.xml</configLocation>
                    <suppressionsLocation>codestyle/suppressions.xml</suppressionsLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failOnViolation>true</failOnViolation>
                    <includeResources>false</includeResources>
                    <includeTestResources>false</includeTestResources>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <!-- here add configures -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>0.13</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <excludeSubProjects>false</excludeSubProjects>
                    <numUnapprovedLicenses>0</numUnapprovedLicenses>
                    <licenses>
                        <license
                                implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                            <licenseFamilyCategory>AL2</licenseFamilyCategory>
                            <licenseFamilyName>Apache License 2.0</licenseFamilyName>
                            <notes/>
                            <patterns>
                                <pattern>Licensed to the Apache Software Foundation (ASF) under
                                    one
                                </pattern>
                            </patterns>
                        </license>
                    </licenses>
                    <licenseFamilies>
                        <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
                            <familyName>Apache License 2.0</familyName>
                        </licenseFamily>
                    </licenseFamilies>
                    <excludes>
                        <!-- Exclude license copies -->
                        <exclude>licenses/**</exclude>

                        <!-- Generated content -->
                        <exclude>LICENSE</exclude>
                        <exclude>NOTICE</exclude>
                        <exclude>DISCLAIMER-WIP</exclude>
                        <exclude>codestyle/checkstyle.xml</exclude>

                        <!-- Documents -->
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.MD</exclude>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.json</exclude>
                        <exclude>**/docs/**</exclude>
                        <exclude>**/*.csv</exclude>
                        <exclude>**/logs/**</exclude>
                        <exclude>**/*.log</exclude>

                        <!-- Web configure files -->
                        <exclude>**/.env</exclude>
                        <exclude>**/.env.production</exclude>
                        <exclude>**/.eslintignore</exclude>
                        <exclude>**/.eslintrc</exclude>
                        <exclude>**/.headerignore</exclude>
                        <exclude>**/.prettierrc</exclude>
                        <exclude>**/.stylelintrc</exclude>
                        <exclude>**/build/**</exclude>
                        <exclude>**/node_modules/**</exclude>

                        <!-- Github -->
                        <exclude>**/.github/**</exclude>

                        <!-- Intellij IDEA -->
                        <exclude>**/*.iml</exclude>
                        <exclude>**/.idea/**</exclude>

                        <!-- Git files -->
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/.gitmodules</exclude>
                        <exclude>**/.git/**</exclude>

                        <!-- Build targets -->
                        <exclude>**/target/**</exclude>
                        <exclude>**/out/**</exclude>
                        <exclude>**/dist/**</exclude>

                        <!-- Test case : certificates used in test cases -->
                        <exclude>**/tubemq-core/src/test/resources/*.keystore</exclude>
                        <!-- Test case : temporary data for test cases -->
                        <exclude>**/AgentBaseTestsHelper/**</exclude>
                        <!-- Test case : example jar for test cases -->
                        <exclude>**/manager-service/src/test/resources/plugins/manager-plugin-examples.jar</exclude>

                        <!-- Referenced 3rd codes -->
                        <exclude>**/resources/assets/lib/**</exclude>
                        <exclude>**/resources/assets/public/**</exclude>
                        <exclude>**/tubemq-client-cpp/src/any.h</exclude>
                        <exclude>**/tubemq-client-cpp/src/buffer.h</exclude>
                        <exclude>**/tubemq-client-cpp/third_party/**</exclude>

                        <!-- Go mod -->
                        <exclude>**/tubemq-client-go/go.mod</exclude>
                        <!-- Go sum -->
                        <exclude>**/tubemq-client-go/go.sum</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
